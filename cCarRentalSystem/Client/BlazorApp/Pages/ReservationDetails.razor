@page "/ReservationDetails/{reservationId:int}"
@using Domain.Models
@using HttpClients.ClientInterfaces
@inject IReservationService reservationService;
<h3>ReservationDetails</h3>

<div class="container">
    @if (reservation != null)
    {
        <div class="row-col-6 d-flex">
            <div class="col-md-6">
                <h3>@reservation.Id</h3>
            </div>
        </div>
        <div class="row-col-6 d-flex">
            <div class="col-md-6">
                <p>User: @reservation.Username</p>
            </div>
        </div>
        <div class="row-col-6 d-flex">
            <div class="col-md-6">
                <p>Car ID: @reservation.CarId</p>
            </div>
        </div>
        <div class="row-col-6 d-flex">
            <div class="col-md-6">
                <p>Start date: @reservation.StartDate</p>
            </div>
        </div>
        <div class="row-col-6 d-flex">
            <div class="col-md-6">
                <p>End date: @reservation.EndDate</p>
            </div>
        </div>
        <div class="row-col-6 d-flex">
            <div class="col-md-6">
                <p>Total price: @reservation.TotalPrice</p>
            </div>
        </div>
    }
</div>


@code {
    [Parameter]
    public int reservationId { get; set; }

    private Reservation? reservation;
    private string msg = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            reservation = await reservationService.GetReservationById(reservationId);
            if (reservation == null)
            {
                msg = "No reservation found.";
            }
        }
        catch (Exception e)
        {
            throw new Exception(e.Message);
        }
    }
}