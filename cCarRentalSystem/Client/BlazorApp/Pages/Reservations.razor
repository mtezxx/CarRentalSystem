@page "/reservations"
@using Domain.Models
@using HttpClients.ClientInterfaces
@inject IReservationService reservationService;
@attribute [Authorize]

<div>
    @if (reservations != null && reservations.Any())
    {
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>User</th>
                    <th>Car ID</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Total Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var reservation in reservations)
                {
                    <tr>
                        <td><a href="/ReservationDetails/@reservation.Id">@reservation.Id</a></td>
                        <td>@reservation.UserName</td>
                        <td>@reservation.CarId</td>
                        <td>@reservation.StartDate.ToString("yyyy-MM-dd")</td>
                        <td>@reservation.EndDate.ToString("yyyy-MM-dd")</td>
                        <td>@reservation.TotalPrice.ToString("C")</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="text-center">
            <h3>No reservations to display.</h3>
        </div>
    }
</div>

@code {
    private IEnumerable<Reservation>? reservations;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            reservations = await reservationService.GetReservationsAsync();
        }
        catch(Exception e)
        {
            // Consider adding error handling logic here
        }
    }
}
