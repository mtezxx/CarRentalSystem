@page "/ViewCars"
@using Domain.Models
@using HttpClients.ClientInterfaces
@inject ICarService carService;

<div class="row d-flex justify-content-center">
    <div class="col-md-6">
        <h3 id="header">Browse Cars</h3>
    </div>
</div>

@if (cars == null)
{
    <p>No cars are available at this time.</p>
}
else if (!cars.Any())
{
    <p>No cars to display.</p>
}
else
{
    <div class="container">
        @{
            int count = 0;
            foreach (var item in cars)
            {
                if (count % 3 == 0)
                {
                    if (count != 0)
                    {
                        @:</div>
                    }
                    @:<div class="row">
                }
                <div class="col-md-4">
                    <div class="card">
                        <h3><b><a href="/CarDetails/@item.Id">@item.Model</a></b></h3>
                        <h4>@item.Brand</h4>
                    </div>
                </div>
                
                count++;
    
                if (count % 3 == 0 || count == cars.Count())
                {
                    @:</div>
                }
            }
        }
    </div>
}

@if (!string.IsNullOrEmpty(msg))
{
    <label style="color: red">@msg</label>
}

@code {
    private IEnumerable<Car>? cars;
    private string msg = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            cars = await carService.GetCarsAsync(null, null, null, null, null, null, null, null, null);
        }
        catch (Exception e){
            Console.WriteLine(e);
            msg = e.Message;
        }

}
}